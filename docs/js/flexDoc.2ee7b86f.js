(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["flexDoc"],{"0154":function(e,n,t){"use strict";t.r(n);var l=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("Md",{attrs:{mdData:e.mdData}}),t("Demo",{attrs:{src:"/demo/flex"}})],1)},i=[],a=t("4f03"),r=t("480a"),s=t("72ff"),c=t.n(s),p={components:{Md:a["a"],Demo:r["a"]},data:function(){return{mdData:c.a}}},f=p,o=t("2877"),x=Object(o["a"])(f,l,i,!1,null,null,null);n["default"]=x.exports},"480a":function(e,n,t){"use strict";var l=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"demoWrap"},[t("div",{staticClass:"pWrap"},[e._m(0),t("div",{staticClass:"pMain"},[t("iframe",{attrs:{src:e.url,frameborder:"0"}})]),t("div",{staticClass:"pHome"})])])},i=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"pControl"},[t("div",{staticClass:"pControlL"}),t("div",{staticClass:"pControlR"})])}],a={name:"Demo",props:{src:{type:String}},computed:{url:function(){return"//".concat(window.location.host,"/#").concat(this.src)}}},r=a,s=(t("9c76"),t("2877")),c=Object(s["a"])(r,l,i,!1,null,null,null);n["a"]=c.exports},"72ff":function(e,n){e.exports='# flex布局 Flex\n\n布局组件，基于 flex 布局的封装。\n\n## 代码演示\n\n```html\n\x3c!-- *.vue --\x3e\n\n<template>\n  <p-wing-blank>\n    <p-white-space></p-white-space>\n    <p-flex-wrap>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n    </p-flex-wrap>\n    <p-flex-wrap>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n    </p-flex-wrap>\n    <p-flex-wrap>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n    </p-flex-wrap>\n    <p-white-space></p-white-space>\n    <p-flex-wrap direction="column">\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n      <p-flex-item><div class="flexItem">Block</div></p-flex-item>\n    </p-flex-wrap>\n  </p-wing-blank>\n</template>\n\n<script>\nexport default {\n  name: \'FlexDemo\'\n}\n<\/script>\n\n<style>\n.flexItem {\n  /* width: 100%; */\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  background-color: lightgray;\n  border-radius: 4px;\n  margin: 2px 10px;\n  padding: 0 4px;\n}\n</style>\n\n```\n\n## API\n\n### FlexWrap\n\n| 属性 | 说明 | 类型 | 默认值 |\n| --- | --- | --- | --- |\n| direction | 项目定位方向，值可以为 row、row-reverse、column、column-reverse | string | \'row\' |\n| wrap | 子元素的换行方式，可选nowrap、wrap、wrap-reverse | string | \'nowrap\' |\n| justify | 子元素在主轴上的对齐方式，可选start、end、center、between、around | string | \'start\' |\n| align | 子元素在交叉轴上的对齐方式，可选start、center、end、baseline、stretch | string | \'center\' |\n| alignContent | 有多根轴线时的对齐方式，可选start、end、center、between、around、stretch | string | \'stretch\' |\n\n### FlexItem\n\nFlexItem 组件默认加上了样式 flex:1 ,保证所有 item 平均分宽度, FlexWrap 容器的 children 不一定是 FlexItem\n\n'},"83ff":function(e,n,t){},"9c76":function(e,n,t){"use strict";var l=t("83ff"),i=t.n(l);i.a}}]);
//# sourceMappingURL=flexDoc.2ee7b86f.js.map