(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a6825492"],{"0a1f":function(n,l){n.exports='# 下拉刷新 PullDown\n\n下拉后触发指定事件。\n\n## 代码演示\n\n```html\n<p-pull-down\n  :pullDown="true"\n  @pullDown="handlePullDown"\n  @pullStateChange="handleStateChange"\n  ref="pullDown"\n>\n  <div v-for="item in 20" :key="item" class="item">item{{item}}</div>\n</p-pull-down>\n```\n\n```js\nexport default {\n  name: \'PullDownDemo\',\n  methods: {\n    handlePullDown: function ({ finish }) {\n      setTimeout(() => {\n        this.$refs.pullDown.loadFinish()\n      }, 2000)\n    },\n    handleStateChange: function (newState) {\n      console.log(newState)\n    }\n  }\n}\n```\n\n## API\n\n| 属性 | 说明 | 类型 | 默认值 |\n| --- | --- | --- | --- |\n| pullDown | 是否开启下拉刷新功能 | boolean | true |\n\n## 事件\n\n| 事件名称 | 说明 |\n| --- | --- |\n| pullDown | 下拉后触发的事件，将会传递一个对象，对象中带有 finish 事件，下拉后的异步操作执行完毕后，调用 finish 事件即可使组件恢复默认状态 |\n| pullStateChange | 下拉状态发生改变时触发，0 为默认，1 为下拉超过临界位置，2 为正在加载，3 为加载完成 |\n\n## ref 事件\n\n| 事件名称 | 说明 |\n| --- | --- |\n| loadFinish | 恢复组件为默认状态，功能与 pullDown 回调中的 finish 相同 |\n\n## slot\n\n下拉滑出的元素可以自定义，需放在 slot 属性为 top 的元素内\n'},"8d7c":function(n,l,t){"use strict";t.r(l);var e=function(){var n=this,l=n.$createElement,t=n._self._c||l;return t("div",[t("Md",{attrs:{mdData:n.mdData}}),t("Demo",{attrs:{src:"/demo/pull-down"}})],1)},o=[],a=t("4f03"),u=t("480a"),i=t("0a1f"),s=t.n(i),d={components:{Md:a["a"],Demo:u["a"]},data:function(){return{mdData:s.a}}},p=d,w=t("2877"),r=Object(w["a"])(p,e,o,!1,null,null,null);l["default"]=r.exports}}]);
//# sourceMappingURL=chunk-a6825492.d23bb05a.js.map